{"dependencies":[{"name":"/home/kiifox/Documents/projects/portfolio/node_modules/choo/package.json","includedInParent":true,"mtime":1530827544097},{"name":"/home/kiifox/Documents/projects/portfolio/package.json","includedInParent":true,"mtime":1530828980612},{"name":"assert","loc":{"line":1,"column":21},"parent":"/home/kiifox/Documents/projects/portfolio/node_modules/choo/component/cache.js","resolved":"/home/kiifox/Documents/projects/portfolio/node_modules/nanoassert/index.js"},{"name":"nanolru","loc":{"line":2,"column":18},"parent":"/home/kiifox/Documents/projects/portfolio/node_modules/choo/component/cache.js","resolved":"/home/kiifox/Documents/projects/portfolio/node_modules/nanolru/index.js"}],"generated":{"js":"var assert = require('assert')\nvar LRU = require('nanolru')\n\nmodule.exports = ChooComponentCache\n\nfunction ChooComponentCache (state, emit, lru) {\n  assert.ok(this instanceof ChooComponentCache, 'ChooComponentCache should be created with `new`')\n\n  assert.equal(typeof state, 'object', 'ChooComponentCache: state should be type object')\n  assert.equal(typeof emit, 'function', 'ChooComponentCache: emit should be type function')\n\n  if (typeof lru === 'number') this.cache = new LRU(lru)\n  else this.cache = lru || new LRU(100)\n  this.state = state\n  this.emit = emit\n}\n\n// Get & create component instances.\nChooComponentCache.prototype.render = function (Component, id) {\n  assert.equal(typeof Component, 'function', 'ChooComponentCache.render: Component should be type function')\n  assert.ok(typeof id === 'string' || typeof id === 'number', 'ChooComponentCache.render: id should be type string or type number')\n\n  var el = this.cache.get(id)\n  if (!el) {\n    var args = []\n    for (var i = 2, len = arguments.length; i < len; i++) {\n      args.push(arguments[i])\n    }\n    args.unshift(Component, id, this.state, this.emit)\n    el = newCall.apply(newCall, args)\n    this.cache.set(id, el)\n  }\n\n  return el\n}\n\n// Because you can't call `new` and `.apply()` at the same time. This is a mad\n// hack, but hey it works so we gonna go for it. Whoop.\nfunction newCall (Cls) {\n  return new (Cls.bind.apply(Cls, arguments)) // eslint-disable-line\n}\n","map":{"mappings":[{"source":"node_modules/choo/component/cache.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/choo/component/cache.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"node_modules/choo/component/cache.js":"var assert = require('assert')\nvar LRU = require('nanolru')\n\nmodule.exports = ChooComponentCache\n\nfunction ChooComponentCache (state, emit, lru) {\n  assert.ok(this instanceof ChooComponentCache, 'ChooComponentCache should be created with `new`')\n\n  assert.equal(typeof state, 'object', 'ChooComponentCache: state should be type object')\n  assert.equal(typeof emit, 'function', 'ChooComponentCache: emit should be type function')\n\n  if (typeof lru === 'number') this.cache = new LRU(lru)\n  else this.cache = lru || new LRU(100)\n  this.state = state\n  this.emit = emit\n}\n\n// Get & create component instances.\nChooComponentCache.prototype.render = function (Component, id) {\n  assert.equal(typeof Component, 'function', 'ChooComponentCache.render: Component should be type function')\n  assert.ok(typeof id === 'string' || typeof id === 'number', 'ChooComponentCache.render: id should be type string or type number')\n\n  var el = this.cache.get(id)\n  if (!el) {\n    var args = []\n    for (var i = 2, len = arguments.length; i < len; i++) {\n      args.push(arguments[i])\n    }\n    args.unshift(Component, id, this.state, this.emit)\n    el = newCall.apply(newCall, args)\n    this.cache.set(id, el)\n  }\n\n  return el\n}\n\n// Because you can't call `new` and `.apply()` at the same time. This is a mad\n// hack, but hey it works so we gonna go for it. Whoop.\nfunction newCall (Cls) {\n  return new (Cls.bind.apply(Cls, arguments)) // eslint-disable-line\n}\n"},"lineCount":42}},"hash":"7f499a7a1acb4249f88772446a54c08d","cacheData":{"env":{}},"id":19}