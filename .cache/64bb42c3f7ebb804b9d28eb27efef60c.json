{"dependencies":[{"name":"/home/kiifox/Documents/projects/portfolio/node_modules/nanoquery/package.json","includedInParent":true,"mtime":1530827544100},{"name":"/home/kiifox/Documents/projects/portfolio/package.json","includedInParent":true,"mtime":1530828980612},{"name":"assert","loc":{"line":2,"column":21},"parent":"/home/kiifox/Documents/projects/portfolio/node_modules/nanoquery/browser.js","resolved":"/home/kiifox/Documents/projects/portfolio/node_modules/nanoassert/index.js"}],"generated":{"js":"var reg = /([^?=&]+)(=([^&]*))?/g\nvar assert = require('assert')\n\nmodule.exports = qs\n\nfunction qs (url) {\n  assert.equal(typeof url, 'string', 'nanoquery: url should be type string')\n\n  var obj = {}\n  url.replace(/^.*\\?/, '').replace(reg, function (a0, a1, a2, a3) {\n    obj[decodeURIComponent(a1)] = decodeURIComponent(a3)\n  })\n\n  return obj\n}\n","map":{"mappings":[{"source":"node_modules/nanoquery/browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/nanoquery/browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"node_modules/nanoquery/browser.js":"var reg = /([^?=&]+)(=([^&]*))?/g\nvar assert = require('assert')\n\nmodule.exports = qs\n\nfunction qs (url) {\n  assert.equal(typeof url, 'string', 'nanoquery: url should be type string')\n\n  var obj = {}\n  url.replace(/^.*\\?/, '').replace(reg, function (a0, a1, a2, a3) {\n    obj[decodeURIComponent(a1)] = decodeURIComponent(a3)\n  })\n\n  return obj\n}\n"},"lineCount":16}},"hash":"546f4883a7825f6923ca232409f11c87","cacheData":{"env":{}},"id":28}